name: Consolidate Songs

on:
  push:
    paths:
      - '**/*_lyrics.txt'
      - '**/*_lyrics.txt'
    paths-exclude:
      - '**/*.gitignore'
      - '**/*.log'
      - '**/*.pyc'
      - '**/__pycache__/**'
      - '**/*.swp'
      - 'consolidated_songs.yml'
      - '.github/workflows/**'
  workflow_dispatch:
    description: 'Manually trigger the consolidate songs workflow'
    inputs:
      debug:
        description: 'Enable debug mode'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write  # Grants permission to write to the repository
  pull-requests: write  # Required for updating files

jobs:
  consolidate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for better git operations

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pyyaml

      - name: Run consolidate script
        run: |
          # Ensure we have write permissions
          chmod +w .
          # Create log directory with proper permissions
          mkdir -p logs
          chmod +w logs
          # Create output directory with proper permissions
          mkdir -p .
          chmod +w .
          # Run the consolidate script with verbose output and absolute paths
          # Disable progress bars for GitHub Actions
          export PROGRESS_DISABLE=1
          # Capture full error output
          python consolidate_songs.py --base-dir $(pwd) --output $(pwd)/song_tags.yml --verbose 2>&1 | tee consolidate_output.txt
          # Display the processed songs
          cat song_tags.yml 2>/dev/null || echo "No song tags file found"
          # Display any log messages
          cat consolidate_songs.log 2>/dev/null || echo "No log file found"
          # Display the captured output
          echo "=== Captured Output ==="
          cat consolidate_output.txt
          # Display any Python error messages
          echo "=== Python Environment ==="
          python -c "print('Python environment is working')"
          # Verify file permissions
          echo "=== File Permissions ==="
          ls -l song_tags.yml 2>/dev/null || echo "No song tags file found"
          # Verify directory permissions
          echo "=== Directory Permissions ==="
          ls -l .
          # Verify git status
          echo "=== Git Status ==="
          git status
          # Display git config
          echo "=== Git Config ==="
          git config --list

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add song_tags.yml
          git commit -m "Add song tags YAML" || echo "No changes to commit"
          git push
